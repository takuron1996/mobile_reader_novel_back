"""empty message

Revision ID: 248f0cd0ecad
Revises: d48214f71cd3
Create Date: 2024-04-02 13:43:05.409973

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "248f0cd0ecad"
down_revision: Union[str, None] = "d48214f71cd3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column(
            "email", sa.String(length=254), nullable=False, comment="メールアドレス"
        ),
        sa.Column("refresh_token", sa.String(length=60), nullable=True),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="ID"
        ),
        sa.Column("password", sa.String(length=60), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.add_column("follow", sa.Column("user_id", sa.Integer(), nullable=False))
    op.create_unique_constraint(None, "follow", ["book_id", "user_id"])
    op.create_unique_constraint(None, "follow", ["user_id"])
    op.create_foreign_key(None, "follow", "user", ["user_id"], ["id"])
    op.add_column(
        "read_history", sa.Column("user_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "read_history_book_id_read_episode_key", "read_history", type_="unique"
    )
    op.create_unique_constraint(None, "read_history", ["book_id", "user_id"])
    op.create_unique_constraint(None, "read_history", ["user_id"])
    op.create_foreign_key(None, "read_history", "user", ["user_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "read_history", type_="foreignkey")
    op.drop_constraint(None, "read_history", type_="unique")
    op.drop_constraint(None, "read_history", type_="unique")
    op.create_unique_constraint(
        "read_history_book_id_read_episode_key",
        "read_history",
        ["book_id", "read_episode"],
    )
    op.drop_column("read_history", "user_id")
    op.drop_constraint(None, "follow", type_="foreignkey")
    op.drop_constraint(None, "follow", type_="unique")
    op.drop_constraint(None, "follow", type_="unique")
    op.drop_column("follow", "user_id")
    op.drop_table("user")
    # ### end Alembic commands ###
